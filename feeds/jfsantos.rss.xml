<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>seaandsailor - jfsantos</title><link>/</link><description></description><lastBuildDate>Thu, 01 Dec 2016 12:00:00 -0500</lastBuildDate><item><title>Model checkpointing using meta-graphs in TensorFlow</title><link>/tensorflow-checkpointing.html</link><description>&lt;p&gt;Deep learning models usually take a while to train, even on GPUs, so being able
to checkpoint intermediate stages in training is really important. Frameworks
like &lt;a href="http://keras.io"&gt;Keras&lt;/a&gt; usually offer functionality to store learned
variables like weights and biases, but for resuming training for a checkpoint,
one might also need to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Thu, 01 Dec 2016 12:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2016-12-01:/tensorflow-checkpointing.html</guid><category>blog</category><category>development</category></item><item><title>A really brief introduction to audio signal processing in Julia</title><link>/audiosp_julia.html</link><description>&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;If you are into scientific computing, you probably have already heard
about &lt;a class="reference external" href="http://julialang.org"&gt;Julia&lt;/a&gt;, the magical language that aims
to be (almost) as fast as C and as easy as MATLAB and Python to write. I
have been playing with Julia for more than a year now, and I really …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Mon, 03 Nov 2014 23:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-11-03:/audiosp_julia.html</guid><category>blog</category><category>development</category></item><item><title>Configuring MATLAB to work with XCode 6 on Yosemite</title><link>/matlab-xcode6.html</link><description>&lt;p&gt;After I upgraded my Mac to Yosemite (10.10), I had a lot of trouble to get MATLAB 2013a working properly. First, I started getting a NullPointerException from Java when trying to start it. Turns out this was a problem with some Java classes used for drawing MATLAB's GUI and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Tue, 28 Oct 2014 17:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2014-10-28:/matlab-xcode6.html</guid><category>blog</category><category>development</category></item><item><title>Using stochastic neurons for conditional computation</title><link>/stochastic_neurons_conditional.html</link><description>&lt;p&gt;As stated in my previous &lt;a class="reference external" href="/gammatone.html"&gt;post&lt;/a&gt;, I had some issues when trying to train
my network while using sparse-coded speech frames as input/output. The
network was getting stuck at the same point after processing a single
batch, and processing additional batches did anything training-wise
(performance, weights, etc., were all …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Sun, 27 Apr 2014 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2014-04-27:/stochastic_neurons_conditional.html</guid><category>blog</category><category>ift6266</category></item><item><title>Using an auditory-inspired representation for speech</title><link>/gammatone.html</link><description>&lt;p&gt;I &lt;a class="reference external" href="http://www.seaandsailor.com/dict_learning.html"&gt;previously&lt;/a&gt;
described an approach to representing speech signals by decomposing
them to an arbitrary dictionary (using a sparse coding algorithm such
as Orthogonal Matching Pursuit). In that post, I showed that learning
a representation from the data by using a dictionary learning method
could be useful. However, there were …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Mon, 31 Mar 2014 14:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2014-03-31:/gammatone.html</guid><category>blog</category><category>ift6266</category></item><item><title>Experiments with a 2 layer MLP incorporating phone information</title><link>/exp_mlp.html</link><description>&lt;p&gt;During the spring break I decided to run some experiments with MLPs as
generative models, using both acoustic samples and phone codes as input.
The experiment's objective is two-fold: I wanted to investigate if using
information from surrounding frames improves the models (when compared
to what our colleagues have found …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Wed, 19 Mar 2014 21:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2014-03-19:/exp_mlp.html</guid><category>blog</category><category>ift6266</category></item><item><title>Dictionary Learning and Sparse Coding for Speech Signals</title><link>/dictlearning.html</link><description>&lt;p&gt;Sparse signal approximations are the basis for a variety of signal
processing techniques. Such approximations are usually employed with
the objective of having a signal representation that is more
meaningful, malleable, and robust to noise than the ones obtained by
standard transform methods &lt;a class="citation-reference" href="#sturm2009" id="id1"&gt;[Sturm2009]&lt;/a&gt;. The so-called dictionary
based methods (DBM …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Tue, 25 Feb 2014 17:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-02-25:/dictlearning.html</guid><category>blog</category><category>ift6266</category></item><item><title>Speech signal representations</title><link>/initial_representation.html</link><description>&lt;p&gt;One of the objectives of our project is to learn a useful
representation from speech signals that can be used to synthesize new
(arbitrary) sentences. There are many different ways of representing
speech signals; those representations are usually tailored to specific
applications. In speech recognition, for example, we want to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Sat, 01 Feb 2014 18:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-02-01:/initial_representation.html</guid><category>blog</category><category>ift6266</category></item><item><title>Personal research journal: deep learning for speech synthesis</title><link>/intro_ift6266.html</link><description>&lt;p&gt;This is the introduction to a series of reports on my experiments on
deep learning methods for speech synthesis. These experiments are part
of my coursework for Dr. Yoshua Bengio's &lt;a class="reference external" href="http://ift6266h14.wordpress.com"&gt;Representation Learning&lt;/a&gt;
course at Université de Montréal. All the related code is going to be
posted at a &lt;a class="reference external" href="https://github.com/jfsantos/ift6266h14"&gt;GitHub repository …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Sat, 25 Jan 2014 15:00:00 -0500</pubDate><guid isPermaLink="false">tag:None,2014-01-25:/intro_ift6266.html</guid><category>blog</category><category>ift6266</category></item><item><title>My Emacs configuration for MATLAB, LaTeX, and Python</title><link>/emacs-config.html</link><description>&lt;p&gt;Emacs is a main part of my daily life. I write code and papers using
it, so you could say that anything that my research will leave
(hopefully) for the next generations was probably typed using it. Not
anybody loves Emacs, and I will not try to convince you to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Sun, 28 Jul 2013 12:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2013-07-28:/emacs-config.html</guid><category>blog</category><category>development</category></item><item><title>WinPython: a portable scientific Python distribution for Windows</title><link>/winpython.html</link><description>&lt;p&gt;Recently I developed a &lt;a class="reference external" href="http://bitbucket.org/jfsantos/sitest"&gt;piece of software&lt;/a&gt; for administering speech
intelligibility listening tests and discovered a small issue: I am not
an administrator of the computer that I am going to use for the tests,
so I cannot install any software. Since the computer is running
Windows, there is no …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Tue, 25 Jun 2013 21:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2013-06-25:/winpython.html</guid><category>blog</category><category>development</category></item><item><title>Using Vagrant to make reproducible development and test environments</title><link>/using-vagrant.html</link><description>&lt;p&gt;Working with research-grade software is hard sometimes. We all have
heard before (more than once, probably) the &amp;quot;it worked perfectly on my
computer&amp;quot; story. The problem is that setting up a development
environment takes a lot of time, and usually you'll end up forgetting
which libraries and pieces of software …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jfsantos</dc:creator><pubDate>Sun, 19 May 2013 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:None,2013-05-19:/using-vagrant.html</guid><category>blog</category><category>development</category></item></channel></rss>